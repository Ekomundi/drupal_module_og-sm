<?php

/**
 * @file
 * OG SM User Create.
 */

/**
 * OG permission to allow creating users within a site.
 */
define('OG_SM_USER_CREATE_OG_PERM_CREATE_ACCOUNT', 'site user create');

/**
 * Implements hook_menu().
 */
function og_sm_user_create_menu() {
  $items = array();

  $items['group/%/%/admin/people/add-user/add'] = array(
    'title' => 'Add members',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 10,
  );

  $items['group/%/%og_sm_site/admin/people/add-user/create'] = array(
    'page callback' => 'drupal_get_form',
    'title' => 'Create account',
    'page arguments' => array('og_sm_user_create_register_form', 2),
    'file' => 'og_sm_user_create.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'og_sm_user_create_access',
    'access arguments' => array(2),
    'weight' => 0,
  );

  return $items;
}

/**
 * Implements hook_og_permission().
 */
function og_sm_user_create_og_permission() {
  return array(
    OG_SM_USER_CREATE_OG_PERM_CREATE_ACCOUNT => array(
      'title' => t('Create a user within a Site'),
      'description' => t('Allows the user to create new users within a Site context.'),
    ),
  );
}

/**
 * Access callback for the user create form.
 *
 * @param object $site
 *   The Site node object.
 * @param object $account
 *   The optional account to check for.
 *
 * @return bool
 *   TRUE if the user has access, FALSE if not.
 */
function og_sm_user_create_access($site, $account = NULL) {
  global $user;
  if (!isset($account)) {
    $account = $user;
  }

  if (user_access('administer users', $account)) {
    return TRUE;
  }

  if (og_sm_site_permission_access($site, OG_SM_USER_CREATE_OG_PERM_CREATE_ACCOUNT, $account)) {
    return TRUE;
  }

  return FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function og_sm_user_create_form_og_ui_add_users_alter(array &$form, array &$form_state) {
  $parameters = drupal_get_query_parameters();

  // Prefill the form with the url parameters.
  if (!empty($parameters['name'])) {
    $form['og_user']['name']['#default_value'] = check_plain($parameters['name']);
  }

  if (!empty($parameters['name'])) {
    $form['og_user']['roles']['#default_value'] = $parameters['roles'];
  }

  $form['sent_mail'] = array(
    '#type' => 'checkbox',
    '#title' => t('Resend one-time-loggin mail'),
  );

  $form['#submit'][] = 'og_sm_user_create_form_og_ui_add_users_submit';
}

/**
 * Submit handler for og_ui_add_users form.
 *
 * @param array $form
 *   The form structure.
 * @param array $form_state
 *   The form state.
 */
function og_sm_user_create_form_og_ui_add_users_submit(array $form, array $form_state) {
  if ($form_state['values']['sent_mail']) {
    $account = user_load_by_name($form_state['values']['name']);
    $params['account'] = $account;
    drupal_mail('user', 'register_no_approval_required', $account->mail, language_default(), $params);
  }
}
