<?php

/**
 * @file
 * OG SM User Create.
 */

/**
 * OG permission to allow creating users within a site.
 */
define('OG_SM_USER_CREATE_OG_PERM_CREATE_ACCOUNT', 'site user create');

/**
 * Implements hook_menu().
 */
function og_sm_user_create_menu() {
  $items = array();

  $items['group/%/%/admin/people/add-user/add'] = array(
    'title' => 'Add members',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['group/%/%og_sm_site/admin/people/add-user/create'] = array(
    'page callback' => 'drupal_get_form',
    'title' => 'Create account',
    'page arguments' => array('user_register_form', 2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'og_sm_user_create_access',
    'access arguments' => array(2),
  );

  return $items;
}

/**
 * Implements hook_og_permission().
 */
function og_sm_user_create_permission() {
  return array(
    OG_SM_USER_CREATE_OG_PERM_CREATE_ACCOUNT => array(
      'title' => t('Create a user within a site'),
      'description' => t('Allows the user to create new users within a site context.'),
    ),
  );
}

/**
 * Access callback for the user create form.
 *
 * @param object $site
 *   The Site node object.
 * @param object $account
 *   The optional account to check for.
 *
 * @return bool
 *   TRUE if the user has access, FALSE if not.
 */
function og_sm_user_create_access($site, $account = NULL) {
  global $user;
  if (!isset($account)) {
    $account = $user;
  }

  if (user_access('administer users', $account)) {
    return TRUE;
  }

  if (og_sm_site_permission_access($site, OG_SM_USER_CREATE_OG_PERM_CREATE_ACCOUNT, $account)) {
    return TRUE;
  }

  return FALSE;
}

/**
 * Implements hook_form_FORMID_alter().
 */
function og_sm_user_create_form_user_register_form_alter(&$form, &$form_state) {
  form_load_include($form_state, 'inc', 'og_sm_user_create', 'og_sm_user_create.form_alter');
  _og_sm_user_create_form_user_register_form_alter($form, $form_state);
}
