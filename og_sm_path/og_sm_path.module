<?php
/**
 * @file
 * Module to support Site paths.
 */

/**
 * Implements hook_form_FORMID_alter().
 *
 * Adds the Site Path field to the Site node forms.
 */
function og_sm_path_form_node_form_alter(&$form, &$form_state) {
  if (og_sm_is_site($form['#node'])) {
    form_load_include($form_state, 'inc', 'og_sm_path', 'og_sm_path.form');
    _og_sm_path_form_node_site_form_alter($form, $form_state);
  }
}

/**
 * Implements hook_og_sm_site_insert().
 */
function og_sm_path_og_sm_site_insert($site) {
  // Save the Site path.
  if (isset($site->site_path)) {
    og_sm_variable_set($site->nid, 'path', $site->site_path);
  }
}

/**
 * Implements hook_og_sm_site_update().
 */
function og_sm_path_og_sm_site_update($site) {
  // Save the Site path.
  if (isset($site->site_path)) {
    og_sm_variable_set($site->nid, 'path', $site->site_path);
  }
}

/**
 * Get the path for Site node.
 *
 * @param object $site
 *   The Site node to get the path for.
 *
 * @return string
 *   The Site path.
 */
function og_sm_path($site) {
  return og_sm_variable_get($site->nid, 'path');
}

/**
 * Get the Site by its path.
 *
 * @param string $path
 *   The path to load the Site for.
 *
 * @return object|FALSE
 *   The Site object.
 */
function og_sm_path_load_site($path) {
  $paths = og_sm_variable_get_all_sites('path');
  $site_nid = array_search($path, $paths);
  if (!$site_nid) {
    return FALSE;
  }

  return og_sm_site_load($site_nid);
}
