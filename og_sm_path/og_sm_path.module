<?php
/**
 * @file
 * Module to support Site paths.
 */

/**
 * Implements hook_module_implements_alter().
 */
function og_sm_path_module_implements_alter(&$implementations, $hook) {
  if ($hook === 'form_alter' && isset($implementations['og_sm_path'])) {
    $group = $implementations['og_sm_path'];
    unset($implementations['og_sm_path']);
    $implementations['og_sm_path'] = $group;
  }
}

/**
 * Implements hook_form_FORMID_alter().
 *
 * Adds the Site Path field to the Site node forms.
 */
function og_sm_path_form_node_form_alter(&$form, &$form_state) {
  if (og_sm_is_site($form['#node'])) {
    form_load_include($form_state, 'inc', 'og_sm_path', 'og_sm_path.form');
    _og_sm_path_form_node_site_form_alter($form, $form_state);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function og_sm_path_form_pathauto_patterns_form_alter(&$form, &$form_state) {
  form_load_include($form_state, 'inc', 'og_sm_path', 'og_sm_path.form');
  _og_sm_path_form_pathauto_patterns_form_alter($form, $form_state);
}

/**
 * Implements hook_og_sm_site_insert().
 */
function og_sm_path_og_sm_site_insert($site) {
  // Save the Site path, no need to trigger the hook here.
  if (isset($site->site_path)) {
    og_sm_path_set($site, $site->site_path, FALSE);
  }
}

/**
 * Implements hook_og_sm_site_update().
 */
function og_sm_path_og_sm_site_update($site) {
  // Save the Site path IF the value changed.
  if (isset($site->site_path)) {
    $existing = og_sm_variable_get($site->nid, 'path');
    if ($existing !== $site->site_path) {
      og_sm_path_set($site, $site->site_path);
    }
  }
}

/**
 * Get the path for Site node.
 *
 * @param object $site
 *   The Site node to get the path for.
 *
 * @return string
 *   The Site path.
 */
function og_sm_path($site) {
  return og_sm_variable_get($site->nid, 'path');
}

/**
 * Get the Site by its path.
 *
 * @param string $path
 *   The path to load the Site for.
 *
 * @return object|FALSE
 *   The Site object.
 */
function og_sm_path_load_site($path) {
  $paths = og_sm_variable_get_all_sites('path');
  $site_nid = array_search($path, $paths);
  if (!$site_nid) {
    return FALSE;
  }

  return og_sm_site_load($site_nid);
}

/**
 * Set a new path for a Site.
 *
 * This will also trigger the og_sm_path_change hook.
 *
 * @param object $site
 *   The Site to set the path for.
 * @param string $path
 *   The path to set.
 * @param bool $trigger_hook
 *   By default the og_sm_path_change hook will be called when the path is set
 *   for a Site. This is not always wanted (eg. when a new Site is created).
 *   Set the parameter to FALSE to prevent the hook from being triggered.
 */
function og_sm_path_set($site, $path, $trigger_hook = TRUE) {
  og_sm_variable_set($site->nid, 'path', $path);
  if ($trigger_hook) {
    og_sm_hook_site('path_change', $site);
  }
}

/**
 * Implements hook_og_sm_site_path_change().
 */
function og_sm_path_og_sm_site_path_change($site) {
  // Update all aliases for the Site when its alias changes.
  module_load_include('inc', 'og_sm_path', 'og_sm_path.batch');
  og_sm_path_site_alias_update_batch($site);
}

/**
 * Implements hook_og_sm_site_delete().
 */
function og_sm_path_og_sm_site_delete($site) {
  // Delete all aliases for a site when it is deleted.
  og_sm_path_site_delete_aliases($site);
}

/**
 * Delete all aliases for the given Site.
 *
 * @param object $site
 *   The Site node to delete the aliases for.
 */
function og_sm_path_site_delete_aliases($site) {
  $site_path = og_sm_path($site);
  db_delete('url_alias')
    ->condition('alias', db_like($site_path) . '/%', 'LIKE')
    ->execute();
}

/**
 * Implements hook_url_outbound_alter().
 */
function og_sm_path_url_outbound_alter(&$path, &$options, $original_path) {
  // Rewrite all outgoing site admin paths for paths that do not have an alias.
  if (preg_match('#^group/node/([0-9]+)(/admin.*)#', $path, $parts)) {
    $site = og_sm_site_load($parts[1]);
    if ($site) {
      $path = og_sm_path($site) . $parts[2];
    }
  }

  // This will check replace any destination (in the options > query) by its
  // path alias.
  if (isset($options['query']['destination'])) {
    $alias = url($options['query']['destination']);
    $options['query']['destination'] = trim($alias, '/');
  }
}

/**
 * Implements hook_url_inbound_alter().
 */
function og_sm_path_url_inbound_alter(&$path, $original_path, $path_language) {
  // Translate an admin path without alias back to its original path.
  if (preg_match('#^([\w/_-]+)(/admin.*)#', $path, $parts)) {
    $site = og_sm_path_load_site($parts[1]);
    if ($site) {
      $path = sprintf('group/node/%d%s', $site->nid, $parts[2]);
    }
  }
}
